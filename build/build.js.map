{"mappings":";;;;;;;AAAA;;;;AAEA,MAAM,4BAAM;;ACFZ;AACA,MAAM,+BAAS;;ACDf;;AAGA,MAAM,0CAAoB,IAAI,uBAAgB;IAC5C,KAAK;IACL,OAAO;QAAE,MAAM;IAAM;IACrB,MAAM;IACN,SAAS;IACT,MAAM;IACN,OAAO;IACP,OAAO;IACP,OAAO;IACP,WAAW;IACX,SAAS;IACT,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,QAAQ;IACR,SAAS;IACT,UAAU;QAAE,MAAM;QAAO,SAAS;IAAI;IACtC,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;IAC3C,MAAM;QACJ,MAAM;QACN,UAAU,IAAI;QACd,QAAQ,IAAI;IACd;AACF;AAEA,wCAAkB,GAAG,CAAC,YAAY,SAAU,IAAI,EAAE;IAChD,IAAI,IAAI,CAAC,KAAK,EACZ,IAAI,CAAC,IAAI,GAAG,eAAQ,IAAI,CAAC,KAAK,EAAE;QAAE,OAAO,IAAI;QAAE,QAAQ,IAAI;IAAC;IAE9D;AACF;AAEA,4BAAiB,sBAAe,eAAe;;;ADhC/C,6BAAO,GAAG,CAAC,QAAQ,CAAC,KAAK,MAAQ;IAC/B,IAAI,MAAM,CAAC,oBAAoB;QAAE,cAAc,IAAI;IAAc;AACnE;AAEA,6BAAO,GAAG,CAAC,aAAa,OAAO,KAAK,MAAQ;IAC1C,MAAM,cAAc,MAAM,0BAAY,QAAQ,CAAC,IAAI,MAAM,CAAC,EAAE;IAC5D,IAAI,MAAM,CAAC,qBAAqB;QAAE,aAAa;IAAY;AAC7D;AAEA,6BAAO,GAAG,CAAC,UAAU,OAAO,KAAK,MAAQ;IACvC,MAAM,cAAc,MAAM,0BAAY,OAAO,CAAC;QAAE,MAAM,IAAI,MAAM,CAAC,IAAI;IAAC;IACtE,IAAI,eAAe,IAAI,EAAE,IAAI,QAAQ,CAAC;SACjC,IAAI,MAAM,CAAC,qBAAqB;QAAE,aAAa;IAAY;AAClE;AAEA,6BAAO,IAAI,CAAC,KAAK,OAAO,KAAK,KAAK,OAAS;IACzC,IAAI,IAAI,OAAO,CAAC,WAAW,EAAE;QAC3B,IAAI,WAAW,GAAG,IAAI;QACtB;IACF,OAAO;QACL,IAAI,QAAQ,CAAC;QACb;IACF,CAAC;AACH,GAAG,sCAAgB;AAEnB,6BAAO,GAAG,CAAC,QAAQ,OAAO,KAAK,KAAK,OAAS;IAC3C,IAAI,IAAI,OAAO,CAAC,WAAW,EAAE;QAC3B,IAAI,WAAW,GAAG,MAAM,0BAAY,QAAQ,CAAC,IAAI,MAAM,CAAC,EAAE;QAC1D;IACF,OACE,IAAI,QAAQ,CAAC;AAEjB,GAAG,gCAAU;AAEb,6BAAO,MAAM,CAAC,QAAQ,OAAO,KAAK,MAAQ;IACxC,IAAI,IAAI,OAAO,CAAC,WAAW,EAAE;QAC3B,MAAM,0BAAY,iBAAiB,CAAC,IAAI,MAAM,CAAC,EAAE;QACjD,IAAI,QAAQ,CAAC;IACf,OACE,IAAI,QAAQ,CAAC;AAEjB;AAEA,6BAAO,GAAG,CAAC,KAAK,OAAO,KAAK,MAAQ;IAClC,MAAM,eAAe,MAAM,0BAAY,IAAI,GAAG,IAAI,CAAC;QAAE,KAAK;IAAM;IAChE,MAAM,IAAI,MAAM,CAAC,6BAA6B;QAAE,cAAc;IAAa;AAC7E;AAEA,qCAAqC;AAErC,SAAS,sCAAgB,IAAI,EAAE;IAC7B,OAAO,OAAO,KAAK,MAAQ;QACzB,8BAA8B;QAC9B,uCAAuC;QACvC,OAAO;QACP,IAAI,cAAc,IAAI,WAAW;QACjC,YAAY,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG;QAC9B,YAAY,QAAQ,GAAG,IAAI,IAAI,CAAC,QAAQ;QACxC,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI;QAChC,YAAY,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK;QAClC,YAAY,OAAO,GAAG,IAAI,IAAI,CAAC,OAAO;QACtC,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI;QAChC,YAAY,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK;QAClC,YAAY,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK;QAClC,YAAY,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK;QAClC,YAAY,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS;QAC1C,YAAY,OAAO,GAAG,IAAI,IAAI,CAAC,OAAO;QACtC,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI;QAChC,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI;QAChC,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI;QAChC,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI;QAChC,IAAI;YACF,oBAAoB;YACpB,4BAA4B;YAC5B,cAAc,MAAM,YAAY,IAAI;YACpC,IAAI,QAAQ,CAAC,CAAC,MAAM,EAAE,YAAY,IAAI,CAAC,CAAC;QAC1C,EAAE,OAAO,KAAK;YACZ,QAAQ,GAAG,CAAC;YACZ,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE;gBAAE,aAAa;YAAY;QACpD;IACF;AACF;AAEA,SAAS,gCAAU,IAAI,EAAE;IACvB,OAAO,OAAO,KAAK,MAAQ;QACzB,IAAI,cAAc,IAAI,WAAW;QACjC,yCAAyC;QACzC,IAAK,QAAQ,IAAI,IAAI,CACnB,WAAW,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK;QAGpC,IAAI;YACF,oBAAoB;YACpB,4BAA4B;YAC5B,cAAc,MAAM,YAAY,IAAI;YACpC,IAAI,QAAQ,CAAC,CAAC,MAAM,EAAE,YAAY,IAAI,CAAC,CAAC;QAC1C,EAAE,OAAO,KAAK;YACZ,QAAQ,GAAG,CAAC;YACZ,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE;gBAAE,aAAa;YAAY;QACpD;IACF;AACF;AAEA,4BAAiB;;;;AE3GjB;4CAAM;;AAEN,MAAM,+BAAS;;;ACFf;AAEA,MAAM,kCAAY,IAAI,uBAAgB;IACpC,KAAK;IACL,OAAO;IACP,QAAQ;IACR,SAAS;IACT,UAAU;IACV,SAAS;IACT,QAAQ;IACR,QAAQ;IACR,SAAS;IACT,WAAW;AACb;AAEA,4BAAiB,sBAAe,OAAO;;;ADTvC,gDAAgD;AAChD,6BAAO,GAAG,CAAC,KAAK,OAAO,KAAK,MAAQ;IAClC,kEAAkE;IAClE,MAAM,eAAe,MAAM,+BAAiB;QAC1C,KAAK;YACH;gBAAE,KAAK,IAAI,KAAK,CAAC,GAAG;YAAC;YACrB;gBAAE,UAAU,IAAI,KAAK,CAAC,GAAG;YAAC;SAC3B;QACD,OAAO,IAAI,KAAK,CAAC,KAAK;IACxB;IACA,MAAM,OAAO,MAAM,kCAAY;QAAE,KAAK,IAAI,KAAK,CAAC,GAAG;IAAC;IACpD,4BAA4B;IAC5B,2DAA2D;IAC3D,iGAAiG;IACjG,IAAI,MAAM,CAAC,kBAAkB;QAAE,cAAc;QAAc,MAAM;IAAK;AACxE;AAEA,6BAAO,GAAG,CAAC,WAAW,OAAO,KAAK,MAAQ;IACxC,kEAAkE;IAClE,MAAM,eAAe,MAAM,+BAAiB;QAC1C,KAAK;YACH;gBAAE,KAAK,IAAI,KAAK,CAAC,GAAG;YAAC;YACrB;gBAAE,UAAU,IAAI,KAAK,CAAC,GAAG;YAAC;SAC3B;QACD,OAAO,IAAI,KAAK,CAAC,KAAK;IACxB,GAAG,IAAI,CAAC;QAAE,KAAK;QAAO,MAAM;IAAM;IAClC,MAAM,OAAO,MAAM,kCAAY;QAAE,KAAK,IAAI,KAAK,CAAC,GAAG;IAAC;IACpD,2DAA2D;IAC3D,IAAI,MAAM,CAAC,kBAAkB;QAAE,cAAc;QAAc,MAAM;IAAK;AACxE;AAEA,6BAAO,GAAG,CAAC,cAAc,OAAO,KAAK,MAAQ;IAC3C,kEAAkE;IAClE,MAAM,eAAe,MAAM,+BAAiB;QAC1C,KAAK;YACH;gBAAE,KAAK,IAAI,KAAK,CAAC,GAAG;YAAC;YACrB;gBAAE,UAAU,IAAI,KAAK,CAAC,GAAG;YAAC;SAC3B;QACD,OAAO,IAAI,KAAK,CAAC,KAAK;IACxB,GAAG,IAAI,CAAC;QAAE,KAAK;QAAO,MAAM;IAAM;IAClC,MAAM,OAAO,MAAM,kCAAY;QAAE,KAAK,IAAI,KAAK,CAAC,GAAG;IAAC;IACpD,4BAA4B;IAC5B,+VAA+V;IAC/V,0BAA0B;IAC1B,gCAAgC;IAChC,8BAA8B;IAC9B,wBAAwB;IACxB,mEAAmE;IACnE,sEAAsE;IACtE,0CAA0C;IAC1C,wBAAwB;IACxB,wBAAwB;IACxB,QAAQ;IACR,2DAA2D;IAC3D,IAAI,MAAM,CAAC,qBAAqB;QAAE,cAAc;QAAc,MAAM;IAAK;AAC3E;AACA,4BAAiB;;;;AE9DjB;;4CACM;;AAEN,MAAM,+BAAS;;AAGf,cAAc;AACd,6BAAO,GAAG,CAAC,QAAQ,CAAC,KAAK,MAAQ;IAC/B,IAAI,MAAM,CAAC,YAAY;QAAE,MAAM,IAAI;IAAM;AAC3C;AAEA,WAAW;AACX,6BAAO,GAAG,CAAC,aAAa,OAAO,KAAK,MAAQ;IAC1C,MAAM,MAAM,MAAM,0BAAI,QAAQ,CAAC,IAAI,MAAM,CAAC,EAAE;IAC5C,IAAI,MAAM,CAAC,aAAa;QAAE,KAAK;IAAI;AACrC;AAEA,aAAa;AACb,6BAAO,GAAG,CAAC,QAAQ,OAAO,KAAK,KAAK,OAAS;IAC3C,IAAI,IAAI,OAAO,EAAE;QACf,IAAI,GAAG,GAAG,MAAM,0BAAI,QAAQ,CAAC,IAAI,MAAM,CAAC,EAAE;QAC1C;IACF,OACE,IAAI,QAAQ,CAAC;AAEjB,GAAG,gCAAU;AAEb,eAAe;AACf,6BAAO,IAAI,CAAC,KAAK,OAAO,KAAK,KAAK,OAAS;IACzC,IAAI,IAAI,OAAO,EAAE;QACf,IAAI,GAAG,GAAG,IAAI;QACd;IACF,OACE,IAAI,QAAQ,CAAC;AAEjB,GAAG,sCAAgB;AAEnB,aAAa;AACb,6BAAO,MAAM,CAAC,QAAQ,OAAO,KAAK,MAAQ;IACxC,IAAI,IAAI,OAAO,CAAC,WAAW,EAAE;QAC3B,MAAM,0BAAI,iBAAiB,CAAC,IAAI,MAAM,CAAC,EAAE;QACzC,IAAI,QAAQ,CAAC;IACf,OACE,IAAI,QAAQ,CAAC;AAEjB;AAEA,gBAAgB;AAChB,6BAAO,GAAG,CAAC,KAAK,OAAO,KAAK,MAAQ;IAClC,MAAM,OAAO,MAAM,0BAAI,IAAI,GAAG,IAAI,CAAC;QAAE,KAAK;IAAM;IAChD,MAAM,IAAI,MAAM,CAAC,aAAa;QAAE,MAAM;IAAK;AAC7C;AAEA,SAAS,sCAAgB,IAAI,EAAE;IAC7B,OAAO,OAAO,KAAK,MAAQ;QACzB,IAAI,MAAM,IAAI,GAAG;QACjB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG;QACtB,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK;QAC1B,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM;QAC5B,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,OAAO;QAC9B,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,QAAQ;QAChC,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,OAAO;QAC9B,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM;QAC5B,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM;QAC5B,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,OAAO;QAC9B,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS;QAClC,IAAI;YACF,MAAM,MAAM,IAAI,IAAI;YACpB,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC;QACrB,EAAE,OAAO,GAAG;YACV,QAAQ,GAAG,CAAC;YACZ,IAAI,MAAM,CAAC;QACb;IACF;AACF;AAEA,SAAS,gCAAU,IAAI,EAAE;IACvB,OAAO,OAAO,KAAK,MAAQ;QACzB,IAAI,MAAM,IAAI,GAAG;QACjB,yCAAyC;QACzC,IAAK,QAAQ,IAAI,IAAI,CACnB,GAAG,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK;QAG5B,IAAI;YACF,oBAAoB;YACpB,4BAA4B;YAC5B,MAAM,MAAM,IAAI,IAAI;YACpB,IAAI,QAAQ,CAAC,CAAC,KAAK,CAAC;QACtB,EAAE,OAAO,KAAK;YACZ,QAAQ,GAAG,CAAC;YACZ,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;QACvB;IACF;AACF;AAEA,4BAAiB;;;;;ALvFjB,MAAM,qCAAe,QAAQ,GAAG,CAAC,YAAY;AAC7C,MAAM,kCAAY,QAAQ,GAAG,CAAC,SAAS;AACvC,MAAM,sCAAgB,QAAQ,GAAG,CAAC,aAAa;AAC/C,MAAM,sCAAgB,QAAQ,GAAG,CAAC,aAAa;AAE/C,MAAM,6BAAO,QAAQ,GAAG,CAAC,IAAI,IAAI;AAEjC,oCAAoC;AACpC,SAAS,uCAAiB;IACxB,IAAI,QAAQ,GAAG,CAAC,QAAQ,KAAK,cAC3B,IAAI,cAAc;SAElB,IAAI,cAAc,CAAC,iBAAiB,EAAE,2BAAK,CAAC;IAE9C,OAAO;AACT;AACA,0BAAI,MAAM,CAAC,4BAAM,IAAM;IACrB,QAAQ,GAAG,CAAC,CAAC,8BAA8B,EAAE,2BAAK,CAAC;AACrD;AAEA,0BAAI,GAAG,CAAC,eAAe;AACvB,0BAAI,GAAG,CAAC,eAAQ,UAAU,CAAC;IAAE,UAAU,KAAK;AAAC;AAC7C,0BAAI,GAAG,CAAC,eAAQ,MAAM,CAAC,0CAAY;AACnC,0BAAI,GAAG,CAAC,sBAAe;AACvB,0BAAI,GAAG,CAAC,qBAAc;IACpB,QAAQ;IACR,QAAQ;IACR,MAAM;QAAC;KAAc;AACvB;AAEA,0BAAI,GAAG,CAAC,KAAK,OAAO,KAAK,MAAQ;IAC/B,IAAI,MAAM,CAAC;AACb;AAEA,0BAAI,GAAG,CAAC,WAAW,CAAC,KAAK,MAAQ;IAC/B,IAAI,OAAO,GAAG,IAAI;IAClB,IAAI,OAAO,GAAG,IAAI;IAClB,IAAI,QAAQ,CAAC;AACf;AAEA,0BAAI,GAAG,CAAC,iBAAiB,CAAC,KAAK,MAAQ;IACrC,MAAM,cAAc;IACpB,IAAI,QAAQ,CAAC,4DAA4D,kCACvE,mBAAmB,cAAc;AACrC;AAEA,eAAe,qCAAe,IAAI,EAAE;IAClC,MAAM,cAAc;IACpB,MAAM,MAAM;IACZ,MAAM,SAAS;QACb,WAAW;QACX,eAAe;QACf,cAAc,CAAC,EAAE,YAAY,sBAAsB,CAAC;QACpD,YAAY;QACZ,MAAM;IACR;IACA,MAAM,OAAO,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAA,MAAO,MAAM,MAAM,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;IAC1E,MAAM,UAAU;QACd,gBAAgB;IAClB;IACA,MAAM,MAAM,MAAM,MAAM,KAAK;QAC3B,QAAQ;QACR,SAAS;QACT,MAAM;IACR,GAAG,IAAI,CAAC,CAAC,WAAa;QACpB,wBAAwB;QACxB,OAAO,SAAS,IAAI;IACtB,GAAG,IAAI,CAAC,CAAC,OAAS;QAChB,OAAO;IACT;IACA,qBAAqB;IACrB,6DAA6D;IAC7D,OAAO,IAAI,YAAY;AACzB;AAEA,eAAe,oCAAc,YAAY,EAAE;IACzC,MAAM,MAAM,gEAAgE;IAC5E,MAAM,MAAM,MAAM,MAAM,KAAK,IAAI,CAAC,CAAC,WAAa;QAC9C,OAAO,SAAS,IAAI;IACtB,GAAG,IAAI,CAAC,CAAC,OAAS;QAChB,OAAO;IACT,GAAG,KAAK,CAAC,CAAC,MAAQ;QAChB,QAAQ,GAAG,CAAC,iBAAiB;IAC/B;IACA,8CAA8C;IAC9C,OAAO;AACT;AAEA,0BAAI,GAAG,CAAC,0BAA0B,OAAO,KAAK,MAAQ;IACpD,MAAM,OAAO,IAAI,KAAK,CAAC,IAAI;IAC3B,MAAM,QAAQ,MAAM,qCAAe;IACnC,MAAM,iBAAiB,MAAM,oCAAc;IAC3C,IAAI,gBAAgB;QAClB,IAAI,OAAO,CAAC,IAAI,GAAG,eAAe,EAAE;QACpC,IAAI,OAAO,CAAC,KAAK,GAAG,eAAe,KAAK;QACxC,IAAI,OAAO,CAAC,KAAK,GAAG;QACpB,oDAAoD;QACpD,IAAI,QAAQ,CAAC;IACf,OACE,IAAI,IAAI,CAAC;AAEb;AAEA,6BAA6B;AAC7B,wBAAiB,oCAAc;IAC7B,iBAAiB,IAAI;IAAE,oBAAoB,IAAI;AACjD,GAAG,IAAI,CAAC,IAAM;IACZ,QAAQ,GAAG,CAAC;AACd,GAAG,KAAK,CAAC,CAAA,MAAO;IACd,QAAQ,GAAG,CAAC,qDAAqD;IACjE,QAAQ,IAAI;AACd;AAEA,0BAAI,GAAG,CAAC,WAAW;AACnB,0BAAI,GAAG,CAAC,SAAS;AACjB,0BAAI,GAAG,CAAC,SAAS;AACjB,0BAAI,GAAG,CAAC,iBAAiB","sources":["server.js","routes/applications.js","models/applications.js","routes/agendas.js","models/NPUs.js","routes/NPUs.js"],"sourcesContent":["const express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst app = express();\r\nconst applicationRouter = require('./routes/applications');\r\nconst agendaRouter = require('./routes/agendas');\r\nconst NPUrouter = require('./routes/NPUs');\r\nconst methodOverride = require('method-override');\r\nconst cookieSession = require('cookie-session');\r\n\r\nconst mongoConnect = process.env.mongoConnect;\r\nconst client_id = process.env.client_id\r\nconst client_secret = process.env.client_secret\r\nconst cookie_secret = process.env.cookie_secret\r\n\r\nconst port = process.env.PORT || 3000;\r\n\r\n// get callback uri from environment\r\nfunction getCallbackURI() {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    var callbackURI = 'https://agendenator.up.railway.app/'\r\n  } else {\r\n    var callbackURI = `http://localhost:${port}`\r\n  };\r\n  return callbackURI;\r\n};\r\napp.listen(port, () => {\r\n  console.log(`Listening at http://localhost:${port}`);\r\n});\r\n\r\napp.set('view engine', 'ejs');\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(express.static(__dirname + '/public'));\r\napp.use(methodOverride('_method'));\r\napp.use(cookieSession({\r\n  secret: cookie_secret,\r\n  maxAge: 24 * 60 * 60 * 1000, // 24 hours\r\n  keys: [cookie_secret]\r\n}));\r\n\r\napp.get('/', async (req, res) => {\r\n  res.render('index');\r\n});\r\n\r\napp.get('/logout', (req, res) => {\r\n  req.session = null;\r\n  req.cookies = null;\r\n  res.redirect('/');\r\n});\r\n\r\napp.get('/login/google', (req, res) => {\r\n  const callbackURI = getCallbackURI();\r\n  res.redirect('https://accounts.google.com/o/oauth2/v2/auth?client_id=' + client_id +\r\n    '&redirect_uri=' + callbackURI + '/login/google/callback&response_type=code&scope=https://www.googleapis.com/auth/userinfo.email');\r\n});\r\n\r\nasync function getAccessToken(code) {\r\n  const callbackURI = getCallbackURI();\r\n  const url = 'https://oauth2.googleapis.com/token';\r\n  const params = {\r\n    client_id: client_id,\r\n    client_secret: client_secret,\r\n    redirect_uri: `${callbackURI}/login/google/callback`,\r\n    grant_type: 'authorization_code',\r\n    code: code\r\n  };\r\n  const body = Object.keys(params).map(key => key + '=' + params[key]).join('&');\r\n  const headers = {\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  };\r\n  const res = await fetch(url, {\r\n    method: 'POST',\r\n    headers: headers,\r\n    body: body\r\n  }).then((response) => {\r\n    // console.log(response)\r\n    return response.json();\r\n  }).then((data) => {\r\n    return data;\r\n  });\r\n  // console.log(body);\r\n  // console.log('getAccessTokenResults', JSON.stringify(res));\r\n  return res.access_token;\r\n};\r\n\r\nasync function getGoogleUser(access_token) {\r\n  const url = 'https://www.googleapis.com/oauth2/v2/userinfo?access_token=' + access_token;\r\n  const res = await fetch(url).then((response) => {\r\n    return response.json();\r\n  }).then((data) => {\r\n    return data;\r\n  }).catch((err) => {\r\n    console.log('getGoogleUser', err);\r\n  });\r\n  // console.log('getGoogleUser results:', res);\r\n  return res;\r\n};\r\n\r\napp.get('/login/google/callback', async (req, res) => {\r\n  const code = req.query.code;\r\n  const token = await getAccessToken(code);\r\n  const googleUserData = await getGoogleUser(token);\r\n  if (googleUserData) {\r\n    req.session.user = googleUserData.id;\r\n    req.session.email = googleUserData.email;\r\n    req.session.token = token;\r\n    // console.log('Google User Data:', googleUserData);\r\n    res.redirect('/applications');\r\n  } else {\r\n    res.send('Error!');\r\n  }\r\n});\r\n\r\n// Connecting to the database\r\nmongoose.connect(mongoConnect, {\r\n  useNewUrlParser: true, useUnifiedTopology: true\r\n}).then(() => {\r\n  console.log(\"Successfully connected to the database\");\r\n}).catch(err => {\r\n  console.log('Could not connect to the database. Exiting now...', err);\r\n  process.exit();\r\n});\r\n\r\napp.use('/agenda', agendaRouter);\r\napp.use('/show', applicationRouter);\r\napp.use('/NPUs', NPUrouter);\r\napp.use('/applications', applicationRouter);","const express = require('express');\r\nconst router = express.Router();\r\nconst Application = require('../models/applications');\r\n\r\nrouter.get('/new', (req, res) => {\r\n  res.render('applications/new', { applications: new Application() });\r\n});\r\n\r\nrouter.get('/edit/:id', async (req, res) => {\r\n  const application = await Application.findById(req.params.id);\r\n  res.render('applications/edit', { application: application });\r\n});\r\n\r\nrouter.get('/:slug', async (req, res) => {\r\n  const application = await Application.findOne({ slug: req.params.slug });\r\n  if (application == null) res.redirect('/')\r\n  else res.render('applications/show', { application: application });\r\n});\r\n\r\nrouter.post('/', async (req, res, next) => {\r\n  if (req.session.isPopulated) {\r\n    req.application = new Application()\r\n    next()\r\n  } else {\r\n    res.redirect('/login/google')\r\n    return\r\n  }\r\n}, saveAndRedirect('show'));\r\n\r\nrouter.put('/:id', async (req, res, next) => {\r\n  if (req.session.isPopulated) {\r\n    req.application = await Application.findById(req.params.id);\r\n    next()\r\n  } else {\r\n    res.redirect('/login/google')\r\n  }\r\n}, putUpdate('show'));\r\n\r\nrouter.delete('/:id', async (req, res) => {\r\n  if (req.session.isPopulated) {\r\n    await Application.findByIdAndDelete(req.params.id)\r\n    res.redirect('/applications')\r\n  } else {\r\n    res.redirect('/login/google')\r\n  }\r\n})\r\n\r\nrouter.get('/', async (req, res) => {\r\n  const applications = await Application.find().sort({ NPU: 'asc' });\r\n  await res.render('applications/applications', { applications: applications });\r\n});\r\n\r\n// console.dir(router, { depth: 5 });\r\n\r\nfunction saveAndRedirect(path) {\r\n  return async (req, res) => {\r\n    //    for (keys in req.body) {\r\n    //      application[keys] = body[keys];\r\n    //    }\r\n    let application = req.application\r\n    application.NPU = req.body.NPU\r\n    application.adjacent = req.body.adjacent\r\n    application.date = req.body.date\r\n    application.month = req.body.month\r\n    application.address = req.body.address\r\n    application.type = req.body.type\r\n    application.title = req.body.title\r\n    application.descr = req.body.descr\r\n    application.notes = req.body.notes\r\n    application.applicant = req.body.applicant\r\n    application.applURL = req.body.applURL\r\n    application.URL1 = req.body.URL1\r\n    application.URL2 = req.body.URL2\r\n    application.URL3 = req.body.URL3\r\n    application.URL4 = req.body.URL4\r\n    try {\r\n      // console.dir(req);\r\n      // console.dir(application);\r\n      application = await application.save()\r\n      res.redirect(`/show/${application.slug}`)\r\n    } catch (err) {\r\n      console.log(err)\r\n      res.render(`/${path}`, { application: application })\r\n    }\r\n  }\r\n};\r\n\r\nfunction putUpdate(path) {\r\n  return async (req, res) => {\r\n    let application = req.application\r\n    //  assign fields to application and save\r\n    for (keys in req.body) {\r\n      application[keys] = req.body[keys];\r\n    }\r\n\r\n    try {\r\n      // console.dir(req);\r\n      // console.dir(application);\r\n      application = await application.save()\r\n      res.redirect(`/show/${application.slug}`)\r\n    } catch (err) {\r\n      console.log(err)\r\n      res.render(`/${path}`, { application: application })\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = router;","const mongoose = require(\"mongoose\");\r\nconst slugify = require('slugify');\r\n\r\nconst applicationSchema = new mongoose.Schema({\r\n  NPU: String,\r\n  month: { type: Array },\r\n  date: String,\r\n  address: String,\r\n  type: String,\r\n  title: String,\r\n  descr: String,\r\n  notes: String,\r\n  applicant: String,\r\n  applURL: String,\r\n  URL1: String,\r\n  URL2: String,\r\n  URL3: String,\r\n  URL4: String,\r\n  status: String,\r\n  ordLink: String,\r\n  adjacent: { type: Array, default: \"-\" },\r\n  createdAt: { type: Date, default: Date.now },\r\n  slug: {\r\n    type: String,\r\n    required: true,\r\n    unique: true\r\n  }\r\n});\r\n\r\napplicationSchema.pre('validate', function (next) {\r\n  if (this.title) {\r\n    this.slug = slugify(this.title, { lower: true, strict: true })\r\n  }\r\n  next()\r\n});\r\n\r\nmodule.exports = mongoose.model(\"Application\", applicationSchema);","const { application } = require('express');\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst Application = require('../models/applications');\r\nconst NPU = require('../models/NPUs');\r\n\r\n// show applications matching request parameters\r\nrouter.get('/', async (req, res) => {\r\n  // find where NPU or adjacent matches request parameters and month\r\n  const applications = await Application.find({\r\n    $or: [\r\n      { NPU: req.query.NPU },\r\n      { adjacent: req.query.NPU }\r\n    ],\r\n    month: req.query.month\r\n  });\r\n  const NPUs = await NPU.findOne({ NPU: req.query.NPU });\r\n  // console.log(applications)\r\n  // render an agenda page with the applications and NPU info\r\n  // res.render(`agendas/agemplates/${req.query.NPU}`, { applications: applications, NPUs: NPUs });\r\n  res.render('agendas/agenda', { applications: applications, NPUs: NPUs })\r\n});\r\n\r\nrouter.get('/roster', async (req, res) => {\r\n  // find where NPU or adjacent matches request parameters and month\r\n  const applications = await Application.find({\r\n    $or: [\r\n      { NPU: req.query.NPU },\r\n      { adjacent: req.query.NPU }\r\n    ],\r\n    month: req.query.month\r\n  }).sort({ NPU: 'asc', type: 'asc' });\r\n  const NPUs = await NPU.findOne({ NPU: req.query.NPU });\r\n  // render an agenda page with the applications and NPU info\r\n  res.render('agendas/roster', { applications: applications, NPUs: NPUs });\r\n});\r\n\r\nrouter.get('/dashboard', async (req, res) => {\r\n  // find where NPU or adjacent matches request parameters and month\r\n  const applications = await Application.find({\r\n    $or: [\r\n      { NPU: req.query.NPU },\r\n      { adjacent: req.query.NPU }\r\n    ],\r\n    month: req.query.month\r\n  }).sort({ NPU: 'asc', type: 'asc' });\r\n  const NPUs = await NPU.findOne({ NPU: req.query.NPU });\r\n  // // fetch from GIS website\r\n  // await fetch(`https://gis.atlantaga.gov/dpcd/rest/services/LandUsePlanning/LandUsePlanning/MapServer/10/query?where=DOCKET_NO%3D'Z-22-001'&outFields=ORDHYPERLINK,%20STATUSTYPE&returnGeometry=false&returnTrueCurves=false&returnIdsOnly=false&returnCountOnly=false&returnZ=false&returnM=false&returnDistinctValues=false&returnExtentOnly=false&f=pjson`)\r\n  //   .then((response) => {\r\n  //     // console.log(response);\r\n  //     return response.json();\r\n  //   }).then((data) => {\r\n  //     application.status = data.features[0].attributes.STATUSTYPE;\r\n  //     application.ordLink = data.features[0].attributes.ORDHYPERLINK;\r\n  //     // console.log(application.status);\r\n  //   }).catch((err) => {\r\n  //     console.log(err);\r\n  //   });\r\n  // render an agenda page with the applications and NPU info\r\n  res.render('agendas/dashboard', { applications: applications, NPUs: NPUs });\r\n});\r\nmodule.exports = router;","const mongoose = require(\"mongoose\");\r\n\r\nconst NPUSchema = new mongoose.Schema({\r\n  NPU: String,\r\n  chair: String,\r\n  chairE: String,\r\n  planner: String,\r\n  plannerE: String,\r\n  meeting: String,\r\n  ZoomID: String,\r\n  ZoomPW: String,\r\n  ZoomURL: String,\r\n  bylawsURL: String,\r\n});\r\n\r\nmodule.exports = mongoose.model(\"NPU\", NPUSchema);","const cookieSession = require('cookie-session');\r\nconst { application } = require('express');\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst NPU = require('../models/NPUs');\r\n\r\n// add new NPU\r\nrouter.get('/new', (req, res) => {\r\n  res.render('NPUs/new', { NPUs: new NPU() });\r\n});\r\n\r\n// edit NPU\r\nrouter.get('/edit/:id', async (req, res) => {\r\n  const npu = await NPU.findById(req.params.id);\r\n  res.render('NPUs/edit', { NPU: npu });\r\n});\r\n\r\n// update NPU\r\nrouter.put('/:id', async (req, res, next) => {\r\n  if (req.session) {\r\n    req.NPU = await NPU.findById(req.params.id);\r\n    next()\r\n  } else {\r\n    res.redirect('/login/google')\r\n  }\r\n}, putUpdate('NPUs'));\r\n\r\n// post new NPU\r\nrouter.post('/', async (req, res, next) => {\r\n  if (req.session) {\r\n    req.NPU = new NPU()\r\n    next()\r\n  } else {\r\n    res.redirect('/login/google')\r\n  }\r\n}, saveAndRedirect('NPUs'));\r\n\r\n// delete NPU\r\nrouter.delete('/:id', async (req, res) => {\r\n  if (req.session.isPopulated) {\r\n    await NPU.findByIdAndDelete(req.params.id)\r\n    res.redirect('/NPUs')\r\n  } else {\r\n    res.redirect('/login/google')\r\n  }\r\n});\r\n\r\n// show all NPUs\r\nrouter.get('/', async (req, res) => {\r\n  const NPUs = await NPU.find().sort({ NPU: 'asc' });\r\n  await res.render('NPUs/NPUs', { NPUs: NPUs });\r\n});\r\n\r\nfunction saveAndRedirect(path) {\r\n  return async (req, res) => {\r\n    let NPU = req.NPU\r\n    NPU.NPU = req.body.NPU\r\n    NPU.chair = req.body.chair\r\n    NPU.chairE = req.body.chairE\r\n    NPU.planner = req.body.planner\r\n    NPU.plannerE = req.body.plannerE\r\n    NPU.meeting = req.body.meeting\r\n    NPU.ZoomID = req.body.ZoomID\r\n    NPU.ZoomPW = req.body.ZoomPW\r\n    NPU.ZoomURL = req.body.ZoomURL\r\n    NPU.bylawsURL = req.body.bylawsURL\r\n    try {\r\n      NPU = await NPU.save()\r\n      res.redirect(`NPUs`)\r\n    } catch (e) {\r\n      console.log(e)\r\n      res.render('/')\r\n    }\r\n  }\r\n}\r\n\r\nfunction putUpdate(path) {\r\n  return async (req, res) => {\r\n    let NPU = req.NPU\r\n    //  assign fields to application and save\r\n    for (keys in req.body) {\r\n      NPU[keys] = req.body[keys];\r\n    }\r\n\r\n    try {\r\n      // console.dir(req);\r\n      // console.dir(application);\r\n      NPU = await NPU.save()\r\n      res.redirect(`/NPUs`)\r\n    } catch (err) {\r\n      console.log(err)\r\n      res.render(`/${path}`)\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = router;"],"names":[],"version":3,"file":"build.js.map","sourceRoot":"../"}